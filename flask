from flask import Flask, render_template, request, jsonify
import tweepy
import requests
import re
import difflib

# Flaskアプリ初期化
app = Flask(__name__)

# Twitter APIの認証情報
api_key = "YgR5cbRclIFSI7q6A77RvsjIj"
api_secret = "IJ845WQDbbWKR4Hsis66BvG1W7R6b6X3TBwfGQFiDFv10uzDZJ"
access_token = "72551941-mdtnuHbUQrbrsV3d5jeiHKXRkB8RwKgHGYGTnznl1"
access_token_secret = "c95LRscnVMzmT6lR2iK9RYiciLypwHjl5OYxekg47EG5k"
bearer_token = "AAAAAAAAAAAAAAAAAAAAAPRLNAEAAAAAQbfilja%2FufYbuzYBUkzkgAqlW0g%3DzYezAiDEtdLCvkBucScCDJcc2qtTOmUGk3s69XxlvhhLjAbrQq"

# 認証を設定
auth = tweepy.OAuth1UserHandler(api_key, api_secret, access_token, access_token_secret)
api = tweepy.API(auth)

# 絵文字判定用正規表現
EMOJI_PATTERN = re.compile(
    "[\U0001F600-\U0001F64F"
    "\U0001F300-\U0001F5FF"
    "\U0001F680-\U0001F6FF"
    "\U0001F1E0-\U0001F1FF"
    "\U00002702-\U000027B0"
    "\U000024C2-\U0001F251"
    "]+", flags=re.UNICODE
)

# 絵文字のみ判定
def is_emoji_only(text):
    return bool(EMOJI_PATTERN.fullmatch(text.strip()))

# ツイート取得関数
def fetch_tweet(tweet_id):
    url = f"https://api.twitter.com/2/tweets/{tweet_id}"
    headers = {"Authorization": f"Bearer {bearer_token}"}
    params = {"tweet.fields": "text,author_id"}
    response = requests.get(url, headers=headers, params=params)
    if response.status_code == 200:
        return response.json()['data']
    else:
        return None

# リプライ収集関数
def fetch_replies(tweet_id):
    replies = []
    headers = {"Authorization": f"Bearer {bearer_token}"}
    url = f"https://api.twitter.com/2/tweets/search/recent?query=conversation_id:{tweet_id}&tweet.fields=author_id,text&max_results=50"
    
    while True:
        response = requests.get(url, headers=headers)
        if response.status_code == 200:
            data = response.json()
            replies.extend(data.get("data", []))
            if "next_token" in data.get("meta", {}):
                next_token = data["meta"]["next_token"]
                url += f"&pagination_token={next_token}"
            else:
                break
        elif response.status_code == 429:
            time.sleep(5 * 60)
        else:
            break

    return replies

# ルートページ
@app.route('/')
def index():
    return render_template('index.html')

# ツイートIDを指定してリプライを取得
@app.route('/fetch_replies', methods=['POST'])
def get_replies():
    tweet_id = request.json.get('tweet_id')
    replies = fetch_replies(tweet_id)
    return jsonify(replies)

if __name__ == '__main__':
    app.run(debug=True)
